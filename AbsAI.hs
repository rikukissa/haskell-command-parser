

module AbsAI where

-- Haskell module generated by the BNF converter




newtype Ident = Ident String deriving (Eq, Ord, Show, Read)
data Command
    = HowMany EPerson
    | WhereIs EItem
    | WhereWasBefore EPerson ELocation
    | WhereWasAfter EPerson ELocation
    | HowToGo ELocation ELocation
    | EitherIn EPerson ELocation ELocation
    | NoLongerIn EPerson ELocation
    | IsIn EPerson ELocation
    | Dropped EPerson EItem
    | Handed EPerson EItem EPerson
    | Move EPerson ELocation
    | Took EPerson EItem
    | IsOf ELocation EDirection ELocation
  deriving (Eq, Ord, Show, Read)

data ELocation = ELocation Ident
  deriving (Eq, Ord, Show, Read)

data EItem = EItem Ident
  deriving (Eq, Ord, Show, Read)

data EDirection = EWest | EEast | ENorth | ESouth
  deriving (Eq, Ord, Show, Read)

data EPerson = EPerson Ident
  deriving (Eq, Ord, Show, Read)

